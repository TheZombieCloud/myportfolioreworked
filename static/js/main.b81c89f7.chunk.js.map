{"version":3,"sources":["logo.svg","Landing.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","style","height","Container","textAlign","Header","as","fontSize","marginLeft","marginTop","color","React","Component","Projects","props","handleClick","e","preventDefault","setState","cur","target","value","state","name","date","languages","description","link","labels","this","length","i","Label","backgroundColor","Grid","Row","width","marginBottom","columns","Column","Button","Group","vertical","onClick","paddingTop","href","icon","labelPosition","Icon","App","className","background","position","params","particles","line_linked","Item","Content","marginRight","src","frameBorder","allowTransparency","allow","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b81c89f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Container, Header } from 'semantic-ui-react';\r\n\r\nclass Landing extends React.Component {\r\n\r\n    render(){\r\n        const containerStyle = {\r\n            height: '100%'\r\n        };\r\n        return(\r\n            <div style = {{height:'100%'}}>\r\n                <Container textAlign = 'left' style = {containerStyle}>\r\n                    <Header as='h1' style = {{fontSize: '5em', marginLeft: '2vw', marginTop: '70vh', color: '#3BBA9C'}}>Alexander Ma</Header>\r\n                    <Header as='h2' style = {{fontSize: '3em', marginLeft: '2vw', color: '#3BBA9C'}}>Aspiring Software Engineer</Header>\r\n                </Container>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport {Header, Label, Icon, Button, Container, Grid} from 'semantic-ui-react';\r\n\r\nclass Projects extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name: [], date: [], languages: [], description: [], link: [], cur: 'Slate'};\r\n        this.state.name['Slate'] = 'Slate';\r\n        this.state.date['Slate'] = 'Sep 2019 - Jan 2020';\r\n        this.state.languages['Slate'] = ['React', 'Flask', 'HTML/CSS', 'Firebase'];\r\n        this.state.description['Slate'] = 'Slate is an online platform allowing users to dynamically create time schedules and generate comparsions between peer schedules that automate the time management aspect of group work.';\r\n        this.state.link['Slate'] = 'https://github.com/TheZombieCloud/SlateWebApp';\r\n        this.state.name['SP'] = 'Smart Pharmacy';\r\n        this.state.date['SP'] = 'Sep 2019 - Dec 2019';\r\n        this.state.languages['SP'] = ['Java', 'JavaScript', 'Firebase'];\r\n        this.state.description['SP'] = 'Smart Pharmacy is a project that allows users to access prescription medication easily through facial recognition and a vending machine.';\r\n        this.state.link['SP'] = 'https://git.uwaterloo.ca/arka/smart-pharmacy';\r\n        this.state.name['Econumy'] = 'Econumy';\r\n        this.state.date['Econumy'] = 'July 2019 - Sep 2019';\r\n        this.state.languages['Econumy'] = ['Python', 'Discord API', 'SQLite 3'];\r\n        this.state.description['Econumy'] = 'Econumy is a Discord bot that allows users to build a base, generate money, and infiltrate other bases to steal their money. There are also minigames that the user can play to earn more money, or lose it all.';\r\n        this.state.link['Econumy'] = 'https://github.com/TheZombieCloud/Econumy';\r\n        this.state.name['HDD'] = 'Heart Disease Detector';\r\n        this.state.date['HDD'] = 'June 2019';\r\n        this.state.languages['HDD'] = ['Python'];\r\n        this.state.description['HDD'] = 'Heart Disease Detector is a group project composed of an artificial neural network as well as a K-Nearest Neighbours model to detect the chance for heart disease given certain variables.';\r\n        this.state.link['HDD'] = 'https://github.com/TheZombieCloud/Heart-Disease-Detector-TOHacks2019-AI-';\r\n    }\r\n\r\n    handleClick = e => {\r\n        e.preventDefault();\r\n        this.setState( {cur: e.target.value});\r\n    }\r\n\r\n    render () {\r\n        var labels = [this.state.languages[this.state.cur].length];\r\n        for (var i = 0;i<this.state.languages[this.state.cur].length;i++){\r\n            labels[i] = (<Label style = {{backgroundColor: '#43455C', color: '#707793'}}>{this.state.languages[this.state.cur][i]}</Label>);\r\n        }\r\n        return(\r\n            <Grid.Row>\r\n                <Container textAlign = 'left' style = {{marginTop: '20vh', width: '75%'}}>\r\n                    <Header as = 'h1' style = {{color: '#3BBA9C', fontSize: '3em'}}>Projects</Header>\r\n                </Container>\r\n                <Container textAlign = 'left' style = {{marginTop: '20vh', width: '75%', backgroundColor: '#3C3F58', marginBottom: '7vh'}}>\r\n                    <Grid columns = {2}>\r\n                        <Grid.Row>\r\n                            <Grid.Column width = {3} style = {{backgroundColor: '#43455C'}}>\r\n                                <Button.Group vertical style = {{backgroundColor: '#43455C'}}>\r\n                                    <Button onClick = {this.handleClick} value = 'Slate' style = {{backgroundColor: '#43455C', color: '#707793', paddingTop: '5vh'}}>Slate</Button>\r\n                                    <Button onClick = {this.handleClick} value = 'SP' style = {{backgroundColor: '#43455C', color: '#707793', paddingTop: '5vh'}}>Smart Pharmacy</Button>\r\n                                    <Button onClick = {this.handleClick} value = 'Econumy' style = {{backgroundColor: '#43455C', color: '#707793', paddingTop: '5vh'}}>Econumy</Button>\r\n                                    <Button onClick = {this.handleClick} value = 'HDD' style = {{backgroundColor: '#43455C', color: '#707793', paddingTop: '5vh'}}>Heart Disease Detector</Button>\r\n                                </Button.Group>\r\n                            </Grid.Column>\r\n                            <Grid.Column width = {10}>\r\n                                <Header as = 'h1' style = {{fontSize: '3.5em', marginTop: '4vh', marginLeft: '1vw', color: '#707793'}}>{this.state.name[this.state.cur]}</Header>\r\n                                <Label style = {{backgroundColor: '#43455C', color: '#707793', marginLeft: '1vw', marginTop: '2vh'}}>{this.state.date[this.state.cur]}</Label>\r\n                                <Header as = 'h6' style = {{fontSize: '2em', color: '#707793', marginLeft: '1vw'}}>Languages & Tools</Header>\r\n                                <Label.Group style = {{marginLeft: '1vw', marginTop: '4vh'}}>\r\n                                    {labels}\r\n                                </Label.Group>\r\n                                <Header as = 'h1' style = {{fontSize: '2em', marginTop: '4vh', marginLeft: '1vw', color: '#707793'}}>About</Header>\r\n                                <p style = {{fontSize: '1.5em', marginTop: '4vh', marginLeft: '1vw', color: '#707793'}}>{this.state.description[this.state.cur]}</p>\r\n                                <Button href = {this.state.link[this.state.cur]} icon labelPosition = 'left' style = {{marginLeft: '1vw', marginTop: '2vh', marginBottom: '5vh', backgroundColor: '#43455C', color: '#707793'}}>\r\n                                    Repo\r\n                                    <Icon name = 'github square'></Icon>\r\n                                </Button>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Container>\r\n            </Grid.Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Landing from './Landing.js';\nimport Projects from './Projects.js';\nimport { Grid, Container, Item, Icon, Image, Header, Button, Segment, Menu } from 'semantic-ui-react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid columns={2} style = {{height: '100%', background: '#2E3047', color: '#3BBA9C'}}>\n          <Particles style = {{position: 'absolute', height: '102%'}} params ={{\n                  particles: {\n                      color: {\n                          value: \"#707793\",\n                      },\n                      line_linked: {\n                          color: \"#707793\",\n                      }\n                  },\n              }}/>\n          <Grid.Row style = {{height: '100%'}}>\n              <Grid.Column>\n                  <Landing></Landing>\n              </Grid.Column>\n              <Grid.Column>\n                  <Container textAlign = 'right'>\n                      <Item>\n                          <Item.Content style = {{marginTop: '3vh', marginRight: '2vw'}}>\n                              <iframe src=\"https://open.spotify.com/embed/track/72FofeAHlloNFTdaCJVp3x\" width=\"300\" height=\"380\"\n                                  frameBorder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                          </Item.Content>\n                      </Item>\n                      <Item style = {{marginTop: '30vh', marginRight: '2vw'}}>\n                          <Item.Content>\n                              <a href = 'https://github.com/TheZombieCloud'>\n                                  <Icon style = {{color: '#3BBA9C'}} name = 'github square' size = 'huge'></Icon>\n                              </a>\n                              <a href = 'https://www.linkedin.com/in/alexyma/'>\n                                  <Icon style = {{color: '#3BBA9C'}} name = 'linkedin square' size = 'huge'></Icon>\n                              </a>\n                              <a href = '%PUBLIC_URL%/Resume%20for%20Programming.pdf'>\n                                  <Icon style = {{color: '#3BBA9C'}} name = 'file alternate' size = 'huge'></Icon>\n                              </a>\n                          </Item.Content>\n                      </Item>\n                  </Container>\n              </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n              <Container textAlign = 'left' style = {{marginTop: '20vh',width: '75%', backgroundColor: '#3C3F58'}}>\n                  <Header as = 'h1' style = {{color: '#707793', fontSize: '3em', marginTop: '7vh', marginLeft: '3vw'}}>About Me</Header>\n                  <p style = {{marginLeft: '3vw', marginTop: '6vh', marginRight: '2vw', color: '#707793', fontSize: '2em'}}>Hi! I am currently a Software Engineer studying\n                      at the University of Waterloo! I love to code and explore\n                      the vast world of technology, learning more each step I take.\n                      Right now, I'm interested in Full Stack Development, particulary\n                      involving the use of Firebase and React.JS.\n                  </p>\n                  <Header as = 'h1' style = {{color: '#707793', fontSize: '3em', marginLeft: '3vw'}}>Contact Me</Header>\n                  <p style = {{marginBottom: '7vh', marginLeft: '3vw', marginTop: '6vh', marginRight: '2vw', color: '#707793', fontSize: '2em'}}>\n                      Email: alex.magamer@gmail.com<br></br>\n                      Phone: (416)219-7460\n                  </p>\n              </Container>\n          </Grid.Row>\n          <Projects></Projects>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}